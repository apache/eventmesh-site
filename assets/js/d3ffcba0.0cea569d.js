"use strict";(self.webpackChunkeventmesh_site=self.webpackChunkeventmesh_site||[]).push([[8887],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=i.createContext({}),l=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return i.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),m=a,h=u["".concat(c,".").concat(m)]||u[m]||d[m]||r;return n?i.createElement(h,o(o({ref:t},p),{},{components:n})):i.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<r;l++)o[l]=n[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6922:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var i=n(87462),a=(n(67294),n(3905));const r={},o="Event-Driven Architecture in Generative AI",s={unversionedId:"application-scenario/generative-AI",id:"application-scenario/generative-AI",title:"Event-Driven Architecture in Generative AI",description:"*   Application scenario name",source:"@site/docs/application-scenario/05-generative-AI.md",sourceDirName:"application-scenario",slug:"/application-scenario/generative-AI",permalink:"/docs/next/application-scenario/generative-AI",draft:!1,editUrl:"https://github.com/apache/eventmesh-site/edit/master/docs/application-scenario/05-generative-AI.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Serverless Solution for Connected Vehicle Services",permalink:"/docs/next/application-scenario/connected-vehicle-service"}},c={},l=[],p={toc:l},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,i.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"event-driven-architecture-in-generative-ai"},"Event-Driven Architecture in Generative AI"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Application scenario name")),(0,a.kt)("p",null,"\u2003","\u2003",(0,a.kt)("strong",{parentName:"p"},"Application of Event-Driven Architecture in Generative AI")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Application scenario description")),(0,a.kt)("p",null,"\u2003","\u2003",'The basic principle of Generative AI is to utilize Deep Learning to learn from large amounts of multimodal data such as text, images, audio, and video, thereby constructing complex statistical models that describe natural language and other data.The training data for these models almost covers all information on the internet, with an immense number of parameters, among which Large Language Models (LLMs) are the most representative. The coherent sentences generated by such models do not stem from an actual "understanding" of the language, but are instead produced by complex mathematical calculations that infer the most likely words or sentence structures, resulting in naturally fluent text output. This process relies on the model\u2019s learning from vast amounts of data, combined with probability theory and optimization algorithms to make predictions and generate results.'),(0,a.kt)("p",null,"\u2003","\u2003","Generative AI, which relies on large language models (LLMs), requires continuous updates to its training data to ensure that the content it generates reflects the latest language usage and information. However, open-source LLMs typically face limitations in domain-specific data. This type of data often belongs to specific industries or remains internal to enterprises, not being publicly available on the internet. As a result, the model cannot access or learn from this information, leading to limitations when addressing problems in specialized fields."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Application scenario implementation proposal")),(0,a.kt)("p",null,"\u2003","\u2003","To address this issue, AI experts employ a combination of Retrieval Augmented Generation (RAG) and Prompt Engineering. By inputting domain-specific data into the LLM in real time, the model can leverage the latest information to generate responses. The event-driven mechanism of ",(0,a.kt)("inlineCode",{parentName:"p"},"EventMesh")," is highly compatible with RAG, enabling real-time synchronization of data into the LLM\u2019s vector database. This allows the LLM to generate more accurate responses based on new knowledge, thus facilitating the development of real-time generative AI."),(0,a.kt)("p",null,"\u2003","\u2003","In addition, ",(0,a.kt)("inlineCode",{parentName:"p"},"EventMesh's")," Event Source and Event Sink can support various types of event sources and event targets, adapting to different kinds of data sources. Whether it's internal enterprise data or external public data, they can be synchronized to the LLM's vector database through the event-driven system, enabling data diversification for the LLM."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"chatbot-workflow",src:n(68234).Z,width:"1080",height:"500"})),(0,a.kt)("p",null,"\u2003","\u2003","The event-driven architecture also enhances the resilience and scalability of generative AI applications. The Retrieval Augmented Generation (RAG) + Prompt Engineering method requires to establish a data pipeline consisting of multiple microservices to process domain-specific data. The main components of the data pipeline include Tokenization, Data Chunking, Data Vectorization, Word Embedding, and Prompt Builder. The interaction between these microservices can be done asynchronously through an event-driven approach. As the data volume increases, each microservice can independently scale without affecting the overall data pipeline architecture. If AI scientists want to add new microservices, such as a User Feedback App to process user feedback data, it can interact with other microservices in the data pipeline by consuming and publishing specific topics without needing to modify the interfaces of other microservices. ",(0,a.kt)("inlineCode",{parentName:"p"},"EventMesh's")," Serverless Workflow event stream features can be used to build such data pipelines."),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{src:"/images/application-scenario/s5_img2.png",width:"80%"})),(0,a.kt)("p",null,"\u2003","\u2003","The ",(0,a.kt)("inlineCode",{parentName:"p"},"EventMesh")," community, along with other Apache open-source communities, will continue to explore new application scenarios in the field of generative AI. The Workflow and Event Source/Sink features of the EventMesh architecture can help build generative AI applications, improving the real-time capability and accuracy of AI applications while enhancing their scalability. This enables the creation of real-time, cloud-native generative AI applications."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Reference")),(0,a.kt)("p",null,"\u2003","\u2003",(0,a.kt)("a",{parentName:"p",href:"https://communityovercode.org/past-sessions/community-over-code-na-2023/"},'A Speech in Community Over Code NA 2023:"Apache EventMesh in Huawei Cloud Next Generation of Enterprise Cloud Native Event Centre: EventGrid"')),(0,a.kt)("p",null,"\u2003","\u2003",(0,a.kt)("a",{parentName:"p",href:"https://mp.weixin.qq.com/s/r6tsKEtaSwdwBizty6X6jg"},"A Technical Blog of EventMesh")))}d.isMDXComponent=!0},68234:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/s5_img1-07fc9ab16b6b5fca4937c88fe2e0a454.png"}}]);