"use strict";(self.webpackChunkeventmesh_site=self.webpackChunkeventmesh_site||[]).push([[6526],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),s=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return n?o.createElement(h,i(i({ref:t},p),{},{components:n})):o.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:r,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},84570:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var o=n(87462),r=(n(67294),n(3905));const a={},i="HTTP",c={unversionedId:"design-document/connect/http-connector",id:"version-v1.10.0/design-document/connect/http-connector",title:"HTTP",description:"HTTP Source Connector",source:"@site/versioned_docs/version-v1.10.0/design-document/03-connect/02-http-connector.md",sourceDirName:"design-document/03-connect",slug:"/design-document/connect/http-connector",permalink:"/docs/v1.10.0/design-document/connect/http-connector",draft:!1,editUrl:"https://github.com/apache/eventmesh-site/edit/master/versioned_docs/version-v1.10.0/design-document/03-connect/02-http-connector.md",tags:[],version:"v1.10.0",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"RabbitMQ",permalink:"/docs/v1.10.0/design-document/connect/rabbitmq-connector"},next:{title:"Redis",permalink:"/docs/v1.10.0/design-document/connect/redis-connector"}},l={},s=[{value:"HTTP Source Connector",id:"http-source-connector",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Startup",id:"startup",level:3},{value:"Sending messages",id:"sending-messages",level:3}],p={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"http"},"HTTP"),(0,r.kt)("h2",{id:"http-source-connector"},"HTTP Source Connector"),(0,r.kt)("h3",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"Before using HTTP source connector, you need to configure the server."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Please configure ",(0,r.kt)("inlineCode",{parentName:"li"},"sourceEnable")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," in ",(0,r.kt)("inlineCode",{parentName:"li"},"/resource/server-config.yml")," to enable source functionality."),(0,r.kt)("li",{parentName:"ul"},"Please configure the source connector in ",(0,r.kt)("inlineCode",{parentName:"li"},"/resource/source-config.yml"),", only the configuration under ",(0,r.kt)("inlineCode",{parentName:"li"},"connectorConfig")," is described here:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"connectorName"),", name of the connector."),(0,r.kt)("li",{parentName:"ul"},"(required) ",(0,r.kt)("inlineCode",{parentName:"li"},"path"),", path of the API."),(0,r.kt)("li",{parentName:"ul"},"(required) ",(0,r.kt)("inlineCode",{parentName:"li"},"port"),", port of the API."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"idleTimeout"),", idle TCP connection timeout in seconds. A connection will timeout and be closed if no data is received nor sent within the ",(0,r.kt)("inlineCode",{parentName:"li"},"idleTimeout")," seconds. The default is 0, which means don't timeout.")))),(0,r.kt)("h3",{id:"startup"},"Startup"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"start EventMesh Runtime"),(0,r.kt)("li",{parentName:"ol"},"start eventmesh-connector-http")),(0,r.kt)("p",null,"When finished, the HTTP source connector will act as an HTTP server."),(0,r.kt)("h3",{id:"sending-messages"},"Sending messages"),(0,r.kt)("p",null,"You can send messages to the source connector via HTTP."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"connectorConfig:\n    connectorName: httpSource\n    path: /test\n    port: 3755\n    idleTimeout: 5\n")),(0,r.kt)("p",null,"The above example configures a URL ",(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:3755/test")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"source-config.yml"),"."),(0,r.kt)("p",null,"You can send messages in ",(0,r.kt)("inlineCode",{parentName:"p"},"binary")," mode or ",(0,r.kt)("inlineCode",{parentName:"p"},"structured")," mode as specified in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/bindings/http-protocol-binding.md"},"cloudevent-spec"),"."),(0,r.kt)("p",null,"Here are two examples:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Sending a message in ",(0,r.kt)("inlineCode",{parentName:"li"},"binary")," mode.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request POST 'http://localhost:3755/test' \\\n--header 'ce-id: 1' \\\n--header 'ce-specversion: 1.0' \\\n--header 'ce-type: com.example.someevent' \\\n--header 'ce-source: /mycontext' \\\n--header 'ce-subject: test_topic' \\\n--header 'Content-Type: text/plain' \\\n--data-raw 'testdata'\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Sending a message in ",(0,r.kt)("inlineCode",{parentName:"li"},"structured")," mode.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl --location --request POST \'http://localhost:3755/test\' \\\n--header \'Content-Type: application/cloudevents+json\' \\\n--data-raw \'{\n    "id": "1",\n    "specversion": "1.0",\n    "type": "com.example.someevent",\n    "source": "/mycontext",\n    "subject":"test_topic",\n    "datacontenttype":"text/plain",\n    "data": "testdata"\n}\'\n')))}d.isMDXComponent=!0}}]);