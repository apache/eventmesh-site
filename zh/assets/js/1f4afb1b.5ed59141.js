"use strict";(self.webpackChunkeventmesh_site=self.webpackChunkeventmesh_site||[]).push([[8520],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>f});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var a=o.createContext({}),d=function(e){var n=o.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},l=function(e){var n=d(e.components);return o.createElement(a.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=d(t),m=r,f=u["".concat(a,".").concat(m)]||u[m]||p[m]||i;return t?o.createElement(f,c(c({ref:n},l),{},{components:t})):o.createElement(f,c({ref:n},l))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,c=new Array(i);c[0]=m;var s={};for(var a in n)hasOwnProperty.call(n,a)&&(s[a]=n[a]);s.originalType=e,s[u]="string"==typeof e?e:r,c[1]=s;for(var d=2;d<i;d++)c[d]=t[d];return o.createElement.apply(null,c)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},85073:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var o=t(87462),r=(t(67294),t(3905));const i={},c="Redis",s={unversionedId:"design-document/connect/redis-connector",id:"version-v1.11.0/design-document/connect/redis-connector",title:"Redis",description:"RedisSinkConnector: From EventMesh to Redis topic queue",source:"@site/versioned_docs/version-v1.11.0/design-document/03-connect/03-redis-connector.md",sourceDirName:"design-document/03-connect",slug:"/design-document/connect/redis-connector",permalink:"/zh/docs/design-document/connect/redis-connector",draft:!1,editUrl:"https://github.com/apache/eventmesh-site/edit/master/versioned_docs/version-v1.11.0/design-document/03-connect/03-redis-connector.md",tags:[],version:"v1.11.0",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"HTTP",permalink:"/zh/docs/design-document/connect/http-connector"},next:{title:"MongoDB",permalink:"/zh/docs/design-document/connect/mongodb-connector"}},a={},d=[{value:"RedisSinkConnector: From EventMesh to Redis topic queue",id:"redissinkconnector-from-eventmesh-to-redis-topic-queue",level:2},{value:"RedisSourceConnector: From Redis topic queue to EventMesh",id:"redissourceconnector-from-redis-topic-queue-to-eventmesh",level:2}],l={toc:d},u="wrapper";function p(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,o.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"redis"},"Redis"),(0,r.kt)("h2",{id:"redissinkconnector-from-eventmesh-to-redis-topic-queue"},"RedisSinkConnector: From EventMesh to Redis topic queue"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"start your Redis instance if needed and EventMesh Runtime."),(0,r.kt)("li",{parentName:"ol"},"enable sinkConnector and check ",(0,r.kt)("inlineCode",{parentName:"li"},"sink-config.yml"),"."),(0,r.kt)("li",{parentName:"ol"},"start your ",(0,r.kt)("inlineCode",{parentName:"li"},"RedisConnectServer"),", it will subscribe to the topic defined in ",(0,r.kt)("inlineCode",{parentName:"li"},"pubSubConfig.subject")," of EventMesh Runtime and send data to ",(0,r.kt)("inlineCode",{parentName:"li"},"connectorConfig.topic")," in your Redis."),(0,r.kt)("li",{parentName:"ol"},"send a message to EventMesh with the topic defined in ",(0,r.kt)("inlineCode",{parentName:"li"},"pubSubConfig.subject")," and then you will receive the message in Redis.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"pubSubConfig:  \n  # default port 10000\n  meshAddress: your.eventmesh.server:10000  \n  subject: TopicTest  \n  idc: FT  \n  env: PRD\n  group: redisSink\n  appId: 5031\n  userName: redisSinkUser\n  passWord: redisPassWord\nconnectorConfig:\n  connectorName: redisSink\n  server: redis://127.0.0.1:6379\n  # the topic in redis\n  topic: SinkTopic\n")),(0,r.kt)("h2",{id:"redissourceconnector-from-redis-topic-queue-to-eventmesh"},"RedisSourceConnector: From Redis topic queue to EventMesh"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"start your Redis instance if needed and EventMesh Runtime."),(0,r.kt)("li",{parentName:"ol"},"enable sourceConnector and check ",(0,r.kt)("inlineCode",{parentName:"li"},"source-config.yml")," (Basically the same as ",(0,r.kt)("inlineCode",{parentName:"li"},"sink-config.yml"),")"),(0,r.kt)("li",{parentName:"ol"},"start your ",(0,r.kt)("inlineCode",{parentName:"li"},"RedisConnectServer"),", it will subscribe to the topic defined in ",(0,r.kt)("inlineCode",{parentName:"li"},"connectorConfig.topic")," in your Redis and send data to ",(0,r.kt)("inlineCode",{parentName:"li"},"pubSubConfig.subject")," of EventMesh Runtime."),(0,r.kt)("li",{parentName:"ol"},"send a CloudEvent message to the topic in Redis, and you will receive the message in EventMesh.")))}p.isMDXComponent=!0}}]);