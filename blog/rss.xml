<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Apache EventMesh Blog</title>
        <link>https://eventmesh.apache.org/blog</link>
        <description>Apache EventMesh Blog</description>
        <lastBuildDate>Thu, 11 Jul 2024 08:37:06 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[CNCF Serverlessworkflow offical recommends EventMesh as runtime impl]]></title>
            <link>https://eventmesh.apache.org/blog/cncf-serverlessworkflow-official-recommends-eventmesh-as-runtime-impl</link>
            <guid>https://eventmesh.apache.org/blog/cncf-serverlessworkflow-official-recommends-eventmesh-as-runtime-impl</guid>
            <pubDate>Thu, 11 Jul 2024 08:37:06 GMT</pubDate>
            <description><![CDATA[CNCF Serverless Workflow defines a vendor-neutral, open-source, and fully community-driven ecosystem for defining and running DSL-based workflows that target the Serverless technology domain.]]></description>
            <content:encoded><![CDATA[<h1>About</h1><p>CNCF <a href="https://serverlessworkflow.io/" target="_blank" rel="noopener noreferrer">Serverless Workflow</a> defines a vendor-neutral, open-source, and fully community-driven ecosystem for defining and running DSL-based workflows that target the Serverless technology domain.</p><p>This project is composed of:</p><ul><li><a href="https://github.com/serverlessworkflow/specification/blob/main/specification.md" target="_blank" rel="noopener noreferrer">Specification</a> for defining DSL-based workflows</li><li><a href="#sdks">Developer SDKs</a> for different programming languages</li><li><a href="#runtimes">Workflow runtimes</a> supporting the specification</li><li>Developer <a href="#tooling">tooling support</a> for writing DSL-based workflows</li></ul><p>CNCF Serverless Workflow is hosted by the <a href="https://www.cncf.io/" target="_blank" rel="noopener noreferrer">Cloud Native Computing Foundation (CNCF)</a> and was approved as a
Cloud Native Sandbox level project on July 14, 2020.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="cncf-landscape">CNCF Landscape<a href="#cncf-landscape" class="hash-link" aria-label="Direct link to CNCF Landscape" title="Direct link to CNCF Landscape">​</a></h2><p>Serverless Workflow project falls under the <a href="https://landscape.cncf.io/card-mode?category=app-definition-and-development&amp;grouping=category" target="_blank" rel="noopener noreferrer">CNCF "App Definition and Development"</a> category.</p><p>It is a member project of the <a href="https://github.com/cncf/wg-serverless" target="_blank" rel="noopener noreferrer">CNCF Serverless Working Group</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="open-source-workflow-runtimes">Open-source workflow runtimes<a href="#open-source-workflow-runtimes" class="hash-link" aria-label="Direct link to Open-source workflow runtimes" title="Direct link to Open-source workflow runtimes">​</a></h2><p align="center"><a href="https://serverlessworkflow.io" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="/images/serverlessworkflow-official.png" width="700px" alt="Serverlessworkflow" class="img_ev3q"></a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[THE APACHE SOFTWARE FOUNDATION ANNOUNCES NEW TOP-LEVEL PROJECT APACHE® EVENTMESH]]></title>
            <link>https://eventmesh.apache.org/blog/the-apache-software-foundation-announces-new-top-level-project-apache-eventmesh</link>
            <guid>https://eventmesh.apache.org/blog/the-apache-software-foundation-announces-new-top-level-project-apache-eventmesh</guid>
            <pubDate>Thu, 11 Jul 2024 08:37:06 GMT</pubDate>
            <description><![CDATA[Posted by The ASF March 23, 2023 Uncategorized]]></description>
            <content:encoded><![CDATA[<p>Posted by The ASF March 23, 2023 Uncategorized</p><p>New generation serverless event middleware for building event-driven applications has graduated to Top-Level Project.</p><p><img loading="lazy" src="https://news.apache.org/wp-content/uploads/2023/03/Event-Mesh-2023-TLP.png" alt="image" class="img_ev3q">
Wilmington, DE – March 15, 2023 – The Apache Software Foundation (ASF), the all-volunteer developers, stewards, and incubators of more than 350 open source projects and initiatives, announced today Apache® EventMesh has graduated from incubation and is now a Top-Level Project (TLP). EventMesh is used in event-driven and serverless architectures to simplify event-driven application development in complex distributed systems.</p><p>“We are proud that EventMesh has graduated from the Apache Incubator. We see this is a great milestone for our community and users,” said Eason Chen, Vice President of Apache EventMesh. “Since incubation, we have added 5 new PPMC members and 20 new committers. Under the guidance of our incubator mentors, we learned how to develop our project and build community the Apache Way successfully. Its growing community and industry adoption are a testament to the project’s success and potential for continued growth and impact. We believe this achievement will inspire confidence in end-users, contributors, and potential contributors alike, and it will help to ensure the continued success and growth of the project in the future.“ </p><p>Download EventMesh here: <a href="https://eventmesh.apache.org/download" target="_blank" rel="noopener noreferrer">https://eventmesh.apache.org/download</a></p><p>EventMesh Overview &amp; Advantages</p><p>With EventMesh users can enable seamless, serverless event-driven capabilities for various components and applications using the publish-subscribe pattern. Often known as “EDA plus Serverless” and “Eventing as Infrastructure,” EventMesh provides a highly scalable and reliable eventing infrastructure that efficiently handles high-volume eventing traffic.</p><p>EventMesh offers a comprehensive set of features that make it easy to build scalable, reliable, and flexible event-driven applications, including:</p><p>Built around the CloudEvents specification: EventMesh provides compatibility with other cloud-based systems and applications, allowing seamless integration.
Extensible middleware by connectors: EventMesh is compatible with a wide range of messaging systems and data stores, enabling easy integration with existing systems.
Serverless workflow engine: The powerful serverless workflow engine enables users to build scalable, event-driven applications with complex orchestration.
Filtering and transformation capabilities: Advanced filtering and transformation capabilities are available, enabling users to selectively route and transform events based on their content and metadata.
Easy Function development and framework integration: EventMesh supports a wide range of programming languages and frameworks, making it easy for developers to build event-driven applications and services with their preferred tools.
Multi-deployment event delivery: It allows for seamless event delivery between multiple EventMesh deployments, enabling distributed systems to span multiple data centers and cloud providers.
“I am very glad to see EventMesh graduate from the Apache incubator and become TLP. EventMesh becomes a representative serverless middleware for building event-driven applications,” said Yanqing Zhong, Director of WeBank OSPO, “Since incubation, EventMesh has attracted more than 260 contributors from around the world. It has always adhered to the Apache Way, created an open, inclusive, and active community, and is still in the process of continuous evolution. Sincerely congratulate EventMesh on getting better and better!”</p><p>ADDITIONAL RESOURCES</p><p>Download: <a href="https://eventmesh.apache.org/download" target="_blank" rel="noopener noreferrer">https://eventmesh.apache.org/download</a>
Docs: <a href="https://eventmesh.apache.org/docs/introduction" target="_blank" rel="noopener noreferrer">https://eventmesh.apache.org/docs/introduction</a>
GitHub: <a href="https://github.com/apache/eventmesh" target="_blank" rel="noopener noreferrer">https://github.com/apache/eventmesh</a>
Contribute: <a href="https://eventmesh.apache.org/community/contribute/contribute" target="_blank" rel="noopener noreferrer">https://eventmesh.apache.org/community/contribute/contribute</a>
The project continues to grow with more than 260 contributors, enriches the CNCF Cloud Native Landscape, and joins CNCF Serverlessworkflow as workflow runtime, it already supports event store middleware such as RocketMQ, Kafka, Pulsar, RabbitMQ, Redis, Knative, Pravega, etc., and tries to integrate with OpenSergo, OpenFunction, and WASMEdge.</p><p>ABOUT THE APACHE INCUBATOR</p><p>The Apache Incubator is the primary entry path for projects and codebases wishing to become part of the efforts at The Apache Software Foundation. All code donations from external organizations and existing external projects enter the ASF through the Incubator to: 1) ensure all donations are in accordance with the ASF legal standards; and 2) develop new communities that adhere to our guiding principles. Incubation is required of all newly accepted projects until a further review indicates that the infrastructure, communications, and decision-making process have stabilized in a manner consistent with other successful ASF projects. While incubation status is not necessarily a reflection of the completeness or stability of the code, it does indicate that the project has yet to be fully endorsed by the ASF. For more information, visit <a href="https://incubator.apache.org/" target="_blank" rel="noopener noreferrer">https://incubator.apache.org/</a>. </p><p>ABOUT THE APACHE SOFTWARE FOUNDATION (ASF)Founded in 1999, the Apache Software Foundation exists to provide software for the public good with support from more than 70 sponsors. ASF’s open source software is used ubiquitously around the world with more than 8,400 committers contributing to 320+ active projects, including Apache Superset, Apache Camel, Apache Flink, Apache HTTP Server, Apache Kafka, and Apache Airflow. The Foundation’s open source projects and community practices are considered industry standards, including the widely adopted Apache License 2.0, the podling incubation process, and a consensus-driven decision model that enables projects to build strong communities and thrive. <a href="https://apache.org" target="_blank" rel="noopener noreferrer">https://apache.org</a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Solving the standardization problem of SaaS combined application integration - The practical application of EventMesh in Huawei]]></title>
            <link>https://eventmesh.apache.org/blog/the-practical-application-of-eventmesh-in-huawei</link>
            <guid>https://eventmesh.apache.org/blog/the-practical-application-of-eventmesh-in-huawei</guid>
            <pubDate>Thu, 11 Jul 2024 08:37:06 GMT</pubDate>
            <description><![CDATA[https://www.bilibili.com/video/BV1cA4y1d7uw/?vd_source=7fa3cce048d504c8a511cfe78a2ec8c5]]></description>
            <content:encoded><![CDATA[<p><a href="https://www.bilibili.com/video/BV1cA4y1d7uw/?vd_source=7fa3cce048d504c8a511cfe78a2ec8c5" target="_blank" rel="noopener noreferrer">https://www.bilibili.com/video/BV1cA4y1d7uw/?vd_source=7fa3cce048d504c8a511cfe78a2ec8c5</a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Born at China’s WeBank, now incubating in the ASF - Introducing Apache EventMesh]]></title>
            <link>https://eventmesh.apache.org/blog/introducing-apache-eventmesh</link>
            <guid>https://eventmesh.apache.org/blog/introducing-apache-eventmesh</guid>
            <pubDate>Tue, 29 Jun 2021 11:14:52 GMT</pubDate>
            <description><![CDATA[Guangsheng Chen, the founder of Apache EventMesh, has been buzzing since the project was welcomed into the Apache Software Foundation (ASF)’s incubator in February 2021.]]></description>
            <content:encoded><![CDATA[<p>Guangsheng Chen, the founder of Apache EventMesh, has been buzzing since the project was welcomed into the Apache Software Foundation (ASF)’s incubator in February 2021. There’s a growing community supporting work on the open source software — used to decouple the application and backend middleware layer — and induction into the ASF incubator is further welcome lift, writes Priya Pradeep.</p><p><img loading="lazy" src="https://thestack.technology/wp-content/uploads/2021/06/ricardo-gomez-angel-3pBHB-bmGno-unsplash-780x470.jpg" alt="Image" class="img_ev3q"></p><p>The founding members of Apache EventMesh include software professionals from China’s WeBank, Oppo and OpenMessaging communities. The project — born at China’s WeBank and first open-sourced on <a href="https://cwiki.apache.org/confluence/display/INCUBATOR/EventMeshProposal" target="_blank" rel="noopener noreferrer">GitHub</a> in September 2019, gaining 250 stars and then forked more than 70 times in a matter of few months — is the first Chinese fintech-founded project to make it into the Apache Incubator.</p><p>As a result Chen is keen to get more people involved in the community through the ASF and diversify its contributor base as interest grows: with 227 million+ lines of code under stewardship, 40,000+ contributors and 350+ live projects, the ASF remains a key forum for open source projects.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-apache-eventmesh">What is Apache EventMesh?<a href="#what-is-apache-eventmesh" class="hash-link" aria-label="Direct link to What is Apache EventMesh?" title="Direct link to What is Apache EventMesh?">​</a></h2><p>In Gartner’s 2019 <a href="https://www.gartner.com/en/documents/3970797/top-3-trends-in-application-architecture-that-enable-dig" target="_blank" rel="noopener noreferrer">Top 3 Trends in Application Architecture</a> That Enable Digital Business report, the number one trend “Mesh Application and Service Architecture” had “Event Mesh” technology as its core.</p><p>Essentially an <a href="https://solace.com/what-is-an-event-mesh/" target="_blank" rel="noopener noreferrer">event mesh</a> is “an architecture layer that allows events from one application to be dynamically routed and received by any other application no matter where these applications are deployed, even without a cloud. It is a configurable infrastructure layer for distributing events among decoupled applications, cloud services and devices. It bridges applications and services in an event-driven architecture (EDA)”.</p><p>Think of it as a <a href="https://solace.com/what-is-an-event-mesh/" target="_blank" rel="noopener noreferrer">way to distribute events</a> among decoupled applications, cloud services and devices; an architecture layer that allows “events from one application to be dynamically routed and received by any other application no matter where these applications are deployed (no cloud, private cloud, public cloud).”</p><p>A simple everyday example could be: A pricey London gym offers a customer flat 50% discount on luxury “athleisure” from France, if joining the gym for a £1,200 yearly membership. As the salesperson swipes your credit card, transaction events happen between these retail points’ electronic billing systems in disparate environments. The cohesion of these events without cloud architecture is carried out via an event mesh, a relatively new kid on the block in the world of event communications.</p><p>Apache EventMesh itself has four primary components:</p><p>eventmesh-runtime : an middleware to transmit events between event producers and consumers, support cloud native apps and microservices.
eventmesh-sdk-java : currently supports HTTP and TCP protocols.
eventmesh-connector-api : an api layer based on OpenMessaging api and SPI pluggin, which can be implemented by popular EventStores such as IMDG, Messaging Engine and OSS etc.
eventmesh-connector-rocketmq : an implementation of eventmesh-connector-api, pub event to or sub event from RocketMQ as EventStore.</p><p>EventMesh-enabled software is used routinely now in major industries like the banking sector, telecom, automobile and aviation across the world. In 2018, <a href="https://www.datanami.com/2019/11/18/why-event-meshes-should-be-on-your-iot-radar/" target="_blank" rel="noopener noreferrer">Gartner</a> proclaimed that 80% of new enterprise ecosystems will require support for event processing in the coming years and it would be a required characteristic by 2022.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="moving-on-from-esb">Moving on from ESB<a href="#moving-on-from-esb" class="hash-link" aria-label="Direct link to Moving on from ESB" title="Direct link to Moving on from ESB">​</a></h2><p>An event mesh’s earlier incarnation was the Enterprise Service Bus (ESB). Chen’s take on the advanced Apache EventMesh is, “While an ESB would offer you a good feature set, the main challenge with ESBs was the monolithic architecture and tight technological coupling between business logic and platform, which lead to a technical and organisational centralisation. Whereas Apache EventMesh is designed to improve on these limitations of a traditional ESB.”</p><p>(An ESB architecture, crudely, lets you integrate different applications by putting a communication bus between them so each application can talk to the bus. While providing a well defined, pluggable” system, ESB can become the bottleneck to implementing changes, with all required changes — which might vary wildly across a business — added to a typically slow-moving ESB change queue. Implementing multiple ESB instances to support multiple business domains can rapidly get very expensive and not always prove hugely cloud-friendly.)</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-apache-eventmesh">Why Apache EventMesh?<a href="#why-apache-eventmesh" class="hash-link" aria-label="Direct link to Why Apache EventMesh?" title="Direct link to Why Apache EventMesh?">​</a></h2><p>As Chen describes it: “Apache EventMesh provides standard protocol such as cloud events; interface such as http, tcp etc.; and pluggable storage engine with the <a href="https://rocketmq.apache.org/" target="_blank" rel="noopener noreferrer">Apache RocketMQ</a> as the default back-end storage. Compared to other mesh-based applications in the market, our platform supports fancy features like extreme low latency and stability, and cloud-native architecture.” However, Chen knows there is stiff competition primarily from AWS and Azure who have made similar products such as EventGrid and EventBridge; and other competitors from Asia, Canada, and the U.S.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="advantages-of-using-apache-eventmesh">Advantages of using Apache EventMesh<a href="#advantages-of-using-apache-eventmesh" class="hash-link" aria-label="Direct link to Advantages of using Apache EventMesh" title="Direct link to Advantages of using Apache EventMesh">​</a></h2><p>Developers have the underlying architecture already built for them; hence they can concentrate on coding event-driven applications faster.
Agility increases as developers can operate applications with high volume of events across global networks in real time amongst hybrid clouds.
It compliments serverless technology and is scalable to modern applications that are characterised by loosely coupled elements performing amongst distributed cloud architecture.
Capable of asynchronous system communications.
Greater security during transmission of event messages.
Possesses technical advantages such as millisecond delay and 100 million message processing capabilities.
Is embedded with tool assistance to achieve fast and automatic isolation of faulty applications.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-future">The Future<a href="#the-future" class="hash-link" aria-label="Direct link to The Future" title="Direct link to The Future">​</a></h2><p>Apache EventMesh is a work in progress. Chen acknowledges, “We are continuously improving, and dealing with the need to address complexity brought in by heavy clients based on the pull model; event-based streaming; and, the openness of event metadata and mixed media storage.”</p>]]></content:encoded>
        </item>
    </channel>
</rss>